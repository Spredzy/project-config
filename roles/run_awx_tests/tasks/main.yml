---
- set_fact:
    pod_name: "{{ zuul.job }}-{{ zuul.change }}"
    image_tag: "awx-pr-{{ zuul.change }}"
  when: pod_name is not defined

- name: Clean up orphaned pods
  shell: |
    kubectl delete pod {{ pod_name }} --grace-period=1 --ignore-not-found

- name: Pre-pull images
  shell: |
    docker pull gcr.io/ansible-tower-engineering/awx_devel:{{ zuul.branch }} | cat
    docker pull gcr.io/ansible-tower-engineering/awx_devel:{{ image_tag }} | cat
  ignore_errors: true

- name: Build image
  shell: |
    docker build -f tools/docker-compose/Dockerfile \
      -t gcr.io/ansible-tower-engineering/awx_devel:{{ image_tag }} \
      --cache-from gcr.io/ansible-tower-engineering/awx_devel:{{ image_tag }} \
      --cache-from gcr.io/ansible-tower-engineering/awx_devel:{{ zuul.branch }} .
  args:
    chdir: "{{ ansible_env.HOME }}/{{ zuul.project.src_dir }}"

- name: Push image
  shell: |
    docker push gcr.io/ansible-tower-engineering/awx_devel:{{ image_tag }} | cat

- name: Create tmpfile for pod
  tempfile:
    suffix: ".pod.yml"
  register: podtmpfile

- name: Render podtmpfile
  template:
    src: pod.yml.j2
    dest: "{{ podtmpfile.path }}"

- name: Run and clean up the thing
  block:
    - name: Apply api objects
      shell: |
        kubectl apply -f {{ podtmpfile.path }}

    - name: Wait for first init container to start
      shell: |
        kubectl -n default get pod {{ pod_name }} \
          -o jsonpath="{.status.initContainerStatuses[0].state}"
      register: result
      until: result.stdout | regex_search('running|terminated')
      delay: 5
      retries: 50

    - name: Tail logs for repo clone
      shell: |
        kubectl logs -f {{ pod_name }} -c clone-repo

    - name: Wait for test runner to start
      shell: kubectl -n default get pod {{ pod_name }} -o jsonpath="{.status.phase}"
      register: result
      until: result.stdout in ['Running', 'Succeeded']
      delay: 5
      retries: 50

    - name: Run the specified command
      shell: |
        kubectl exec {{ pod_name }} -- bash -c "{{ '/entrypoint.sh ' + (command | quote) }}"

    - name: Copy artifacts to host
      shell: |
        kubectl cp {{ pod_name }}:{{ item }} {{ ansible_user_dir }}/{{ zuul.project.src_dir }}/
      with_items: "{{ artifacts | default([]) }}"

  always:
    - name: Delete pod after run
      shell: |
        kubectl delete pod {{ pod_name }}
